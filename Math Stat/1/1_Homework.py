#!/usr/bin/env python
# coding: utf-8

# ### Задача 1
# 
# Из колоды в 52 карты извлекаются случайным образом 4 карты. 
# 
# #### a) Найти вероятность того, что все карты – крести.

# In[1]:


from math import factorial as fct


# In[2]:


def combinations(n1, k1):
    return fct(n1)//(fct(k1)*fct(n1-k1))


# In[3]:


all = combinations(52, 4)
all


# In[4]:


clubs = 52 // 4
clubs_4 = combinations(clubs, 4)
clubs_4


# In[5]:


p_4clubs_ofall = clubs_4 / all
p_4clubs_ofall


# In[6]:


print(f"Ответ: вероятность того, что все карты – крести: {round(p_4clubs_ofall*100, 1)} %.")


# Проверка: по сути это вероятность одновременного наступления 4 событий:
# 1. первая карта треф (из 52 карт, в которых 13 карт треф)
# 2. вторая карта треф (из оставшей 51 карты, в которых только 12 треф)
# 3. третья карта треф (из колоды 50, 11 треф)
# 4. треф (из 49, 10 треф)

# In[7]:


p_check_1 = (13 / 52) * (12 / 51) * (11 / 50) * (10 / 49)
p_check_1


# #### б) Найти вероятность, что среди 4-х карт окажется хотя бы один туз.

# In[8]:


noace = combinations(48, 4)
noace


# In[9]:


p_noace = noace / all
p_noace


# In[10]:


p_oneace = 1 - p_noace
p_oneace


# In[11]:


print(f"Ответ: вероятность, что среди 4-х карт окажется хотя бы один туз: {round(p_oneace*100, 1)} %.")


# Проверка: проверим через прямое сложение вероятностей. Должно случиться одно из следующих событий:
# 1. Либо из колоды достанем только 1 туза. И остальные 3 - не тузы.
# 2. Либо 2 туза и 2 не туза.
# 3. Либо 3 туза и 1 не туз.
# 4. Либо все 4 туза

# In[12]:


comb2 = (combinations(4,1) * combinations(48,3)) + (combinations(4,2) * combinations(48,2)) + (combinations(4,3) * combinations(48,1)) + (combinations(4,4) * combinations(48,0)) 
p_check2 = comb2 / all
p_check2


# ### Задача 2
# На входной двери подъезда установлен кодовый замок, содержащий десять кнопок с цифрами от 0 до 9. Код содержит три цифры, которые нужно нажать одновременно. Какова вероятность того, что человек, не знающий код, откроет дверь с первой попытки?

# In[13]:


all_code = combinations(10,3)
all_code


# In[14]:


p_firsttry = 1/120
p_firsttry


# In[15]:


print(f"Ответ: вероятность того, что человек, не знающий код, откроет дверь с первой попытки: {round(p_firsttry*100, 1)} %.")


# ### Задача 3
# В ящике имеется 15 деталей, из которых 9 окрашены. Рабочий случайным образом извлекает 3 детали. Какова вероятность того, что все извлеченные детали окрашены?

# In[16]:


all_det = combinations(15,3)
all_painted = combinations(9,3)
p_all3painted = all_painted / all_det
p_all3painted


# In[17]:


print(f"Ответ: вероятность того, что все извлеченные детали окрашены: {round(p_all3painted*100, 1)} %.")


# ### Задача 4
# В лотерее 100 билетов. Из них 2 выигрышных. Какова вероятность того, что 2 приобретенных билета окажутся выигрышными?

# In[18]:


all_tickets = combinations(100, 2)
tickets_2 = 1
p_2tickets = tickets_2 / all_tickets
p_2tickets


# In[19]:


print(f"Ответ: вероятность того, что 2 приобретенных билета окажутся выигрышными: {round(p_2tickets*100, 3)} %.")

